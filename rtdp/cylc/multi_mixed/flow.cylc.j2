{# Mixed Multi-Component Cylc Workflow Template #}
[scheduler]
    allow implicit tasks = True
    UTC mode = True

[scheduling]
    cycling mode = integer
    initial cycle point = 1
    final cycle point = 1

    [[graph]]
        R1 = """
            # Start chain
            receiver:ready {% for proxy in gpu_proxies %}=> gpu_proxy_{{ loop.index0 }}:ready {% endfor %}{% for emu in cpu_emulators %}=> emulator_{{ loop.index0 }}:ready {% endfor %}=> sender
            # Completion chain
            sender:done => !receiver
            receiver:transfer_done
        """

[runtime]
    [[root]]
        platform = {{ platform.name | default('jlab_slurm') }}
        [[[job]]]
            execution time limit = PT2H
        [[[directives]]]
            --ntasks = 1
            --partition = {{ partition | default('ifarm') }}
            --output = slurm_%j.log
            --error = slurm_%j.log
        [[[environment]]]
            # TODO: Add global environment variables as needed

    [[receiver]]
        # TODO: Adapt receiver logic for mixed setup if needed
        script = """
        # ... receiver script ...
        """
        [[[directives]]]
            --job-name = receiver
            --cpus-per-task = 4
            --mem = 8G
        [[[outputs]]]
            ready = "ready"
            transfer_done = "Transfer completed successfully"

    {% for proxy in gpu_proxies %}
    [[gpu_proxy_{{ loop.index0 }}]]
        # Each proxy gets its own config
        script = """
        # ... proxy script for GPU {{ proxy.device }} ...
        # TODO: Use proxy-specific variables
        """
        [[[directives]]]
            --job-name = proxy_{{ loop.index0 }}
            --partition = {{ proxy.partition | default('gpu') }}
            --gres = {{ proxy.gres | default('gpu:A100:1') }}
            --mem = {{ proxy.mem | default('100G') }}
            --cpus-per-task = {{ proxy.cpus | default('4') }}
        [[[outputs]]]
            ready = "ready"
    {% endfor %}

    {% for emu in cpu_emulators %}
    [[emulator_{{ loop.index0 }}]]
        # Each emulator gets its own config
        script = """
        # ... emulator script for CPU {{ emu.id }} ...
        # TODO: Use emulator-specific variables
        """
        [[[directives]]]
            --job-name = emulator_{{ loop.index0 }}
            --cpus-per-task = {{ emu.cpus | default('8') }}
            --mem = {{ emu.mem | default('16G') }}
        [[[outputs]]]
            ready = "ready"
    {% endfor %}

    [[sender]]
        # TODO: Adapt sender logic for mixed setup if needed
        script = """
        # ... sender script ...
        """
        [[[directives]]]
            --job-name = sender
            --cpus-per-task = 4
            --mem = 8G 