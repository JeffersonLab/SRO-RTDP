version: '3.8'

services:
  receiver:
    build:
      context: ../components
      dockerfile: Dockerfile
    container_name: rtdp-receiver
    networks:
      - rtdp_net
    volumes:
      - type: bind
        source: ./config
        target: /config
      - type: bind
        source: ./output/received_data
        target: /data/received_data
    command: >
      sh -c "mkdir -p /data/received_data && chmod 777 /data/received_data && cd /app && PYTHONPATH=/app python3 receiver.py --config /config/receiver_config.yml"
    environment:
      - PYTHONUNBUFFERED=1
    user: "${UID:-1000}:${GID:-1000}"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "50804" ]
      interval: 2s
      timeout: 5s
      retries: 10

  emulator1:
    image: cpu-emu:latest
    container_name: rtdp-emulator1
    networks:
      - rtdp_net
    volumes:
      - type: bind
        source: ./output/emulator1
        target: /output
    entrypoint: [ "/app/entrypoint.sh" ]
    command: [ "forward", "50801", "rtdp-receiver", "50804" ]
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "50801" ]
      interval: 2s
      timeout: 5s
      retries: 10

  emulator2:
    image: cpu-emu:latest
    container_name: rtdp-emulator2
    networks:
      - rtdp_net
    volumes:
      - type: bind
        source: ./output/emulator2
        target: /output
    entrypoint: [ "/app/entrypoint.sh" ]
    command: [ "forward", "50802", "rtdp-receiver", "50804" ]
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "50802" ]
      interval: 2s
      timeout: 5s
      retries: 10

  sender:
    build:
      context: ../components
      dockerfile: Dockerfile
    container_name: rtdp-sender
    networks:
      - rtdp_net
    volumes:
      - type: bind
        source: ./config
        target: /config
    command: >
      sh -c "cd /app && PYTHONPATH=/app python3 sender.py --config /config/sender_config.yml"
    environment:
      - PYTHONUNBUFFERED=1
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      emulator1:
        condition: service_healthy
      emulator2:
        condition: service_healthy
      receiver:
        condition: service_healthy

networks:
  rtdp_net:
    driver: bridge
