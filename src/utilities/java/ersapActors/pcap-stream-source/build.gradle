plugins {
    id 'java'
    id 'application'
}

group = 'org.jlab.epsci.ersap.actor'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://clasweb.jlab.org/clas12maven/'
    }
    flatDir {
        dirs "${System.env.ERSAP_HOME}/lib"
    }
}

dependencies {
    // ERSAP dependencies
    implementation name: 'ersap-java-1.0-SNAPSHOT'
    implementation 'org.jlab.coda:xmsg:2.3'
    implementation 'com.google.protobuf:protobuf-java:3.15.5'
    implementation 'org.zeromq:jeromq:0.3.6'
    implementation 'org.json:json:20201115'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'org.yaml:snakeyaml:1.28'
    
    // LMAX Disruptor for high-performance event processing
    implementation 'com.lmax:disruptor:3.4.4'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    
    // jline for the ERSAP shell
    implementation 'org.jline:jline:3.21.0'
    
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

application {
    mainClass = 'org.jlab.epsci.ersap.actor.pcap.source.ErsapRunner'
}

// Task to run the ERSAP workflow
task runWorkflow(type: JavaExec) {
    group = 'application'
    description = 'Runs the complete PCAP workflow'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.jlab.epsci.ersap.actor.pcap.source.ErsapRunner'
    
    args = [
        'config/services.yaml',
        'config/dataset.txt'
    ]
    
    dependsOn build
}

// Task to run the MockPcapServer
task runMockServer(type: JavaExec) {
    group = 'application'
    description = 'Runs the MockPcapServer'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.jlab.epsci.ersap.actor.pcap.source.MockPcapServer'
    
    // Default arguments (can be overridden from command line)
    args = ['/scratch/jeng-yuantsai/CLAS12_ECAL_PCAL_DC_2024-05-15_17-12-30.pcap', '9000']
    
    // Allow passing arguments from command line
    if (project.hasProperty('pcapFile')) {
        args[0] = project.getProperty('pcapFile')
    }
    
    if (project.hasProperty('port')) {
        args[1] = project.getProperty('port')
    }
}

// Custom install task to copy the JAR
task installJar(type: Copy) {
    from "${buildDir}/libs/${jar.archiveBaseName.get()}-${jar.archiveVersion.get()}.jar"
    def dest = "$System.env.ERSAP_HOME/lib"
    into dest
    doLast {
        println "JAR installed to " + dest
    }

    doFirst {
        if (dest == 'null') {
            throw new GradleException('ERSAP_HOME not set')
        }
    }
}

installJar.dependsOn build

jar {
    archiveBaseName = 'ersap-pcap-stream-source'
    archiveVersion = '1.0.0'
    manifest {
        attributes(
            'Main-Class': application.mainClass,
            'Class-Path': configurations.runtimeClasspath.files.collect { it.name }.join(' ')
        )
    }
    
    // Include all dependencies in the jar
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
} 